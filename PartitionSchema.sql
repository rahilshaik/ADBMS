--ADDING FILEGROUP
ALTER DATABASE University ADD FILEGROUP PARTITION
GO
--CHECKING FILEGROUPS
SELECT * FROM SYS.filegroups
--ADDING FILE
ALTER DATABASE University ADD FILE (NAME='PARTITIONFILE',
FILENAME='C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\PARTITION.NDF')
TO FILEGROUP PARTITION
--CHECKING FILE
SELECT * FROM sys.sysfiles
--CREATE PARTITION FUNCTION TO SPLIT DATA
CREATE PARTITION FUNCTION PARTFUNC_PARTITIONTBL ( INT ) AS RANGE LEFT FOR VALUES (500, 1000, 5000, 7500);
GO
--CREATE PARTITION SCHEMA TO DECIDE HOW DATA WILL SPLIT 
--FOR 0-500, DATA WILL GO TO PRIMARY.FOR 500-1000 , DATA WILL GO TO PARTITIONFILE
CREATE PARTITION SCHEME PARTITIONSCHEME_1 AS PARTITION	PARTFUNC_PARTITIONTBL TO ([PRIMARY],PARTITION,[PRIMARY],PARTITION,PARTITION,PARTITION )

--CREATE A TABLE USING PARTITION SCHEME WHICH SPLITS THE DATA AND PUT IT IN RESPECTIVE FILE
CREATE TABLE PARTITION_STUDENTS(
	[StudentID] [int] NOT NULL IDENTITY(1,1) PRIMARY KEY CLUSTERED,
	[First_Name] [varchar](150) NULL,
	[Last_Name] [varchar](150) NULL,
	[Email] [varchar](100) NULL,
	[Degree_ID] [int] NULL,
	[Department_Id] [int] NULL)
	ON PARTITIONSCHEME_1([StudentID])

GO
--INSERTED DATA INTO PARTITION_STUDENTS SAME AS THE STUDENTS DATA
--$PARTITION HELPS TO FIND IN WHICH FILE THE DATA GOT INSERTED
SELECT TOP 6000 *, $PARTITION.PARTFUNC_PARTITIONTBL ([StudentID] ) FROM PARTITION_STUDENTS

--GET DETAILS FROM WITHIN PARTITION
SELECT * FROM SYS.partitions WHERE OBJECT_ID ('PARTITION_STUDENTS')=OBJECT_ID

SET STATISTICS IO ON 
SET STATISTICS TIME ON
SELECT * FROM Students WHERE Email='Molly_Woodley2155@famism.biz'
SET STATISTICS IO ON 
SET STATISTICS TIME ON

SET STATISTICS IO ON 
SET STATISTICS TIME ON
SELECT * FROM Students WHERE StudentID=6500
SET STATISTICS IO ON 
SET STATISTICS TIME ON